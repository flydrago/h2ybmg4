<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.h2y.bmg.dao.IImportGoodsTaskDao">

	<resultMap type="com.h2y.bmg.entity.ImportGoodsTask" id="importgoodstaskDaoMap">
		<result property="id" column="id" javaType="long" jdbcType="BIGINT" />
		<result property="bagCode" column="bag_code" javaType="string" jdbcType="VARCHAR" />
		<result property="dataId" column="data_id" javaType="long" jdbcType="BIGINT" />
		<result property="dataType" column="data_type" javaType="int" jdbcType="INTEGER" />
		<result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" />
		<result property="taskType" column="task_type" javaType="string" jdbcType="VARCHAR" />
		<result property="taskValue" column="task_value" javaType="string" jdbcType="VARCHAR" />
		<result property="resultCode" column="result_code" javaType="string" jdbcType="VARCHAR" />
		<result property="resultValue" column="result_value" javaType="string" jdbcType="VARCHAR" />
		<result property="createDate" column="create_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="memo" column="memo" javaType="string" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="java.util.Map" id="importgoodstaskDaoListMap">
		<result property="id" column="id" javaType="long" jdbcType="BIGINT" />
		<result property="bagCode" column="bag_code" javaType="string" jdbcType="VARCHAR" />
		<result property="dataId" column="data_id" javaType="long" jdbcType="BIGINT" />
		<result property="dataType" column="data_type" javaType="int" jdbcType="INTEGER" />
		<result property="userId" column="user_id" javaType="long" jdbcType="BIGINT" />
		<result property="taskType" column="task_type" javaType="string" jdbcType="VARCHAR" />
		<result property="taskValue" column="task_value" javaType="string" jdbcType="VARCHAR" />
		<result property="resultCode" column="result_code" javaType="string" jdbcType="VARCHAR" />
		<result property="resultValue" column="result_value" javaType="string" jdbcType="VARCHAR" />
		<result property="createDate" column="create_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="memo" column="memo" javaType="string" jdbcType="VARCHAR" />
	</resultMap>
	
	
	<insert id="add" parameterType="com.h2y.bmg.entity.ImportGoodsTask">
	<selectKey keyProperty="id" resultType="long" order="AFTER"> 
			SELECT max(id)  AS value  from tb_import_goods_task 
		</selectKey>  
		insert into tb_import_goods_task
		(
		bag_code,
		data_id,
		data_type,
		user_id,
		task_type,
		task_value,
		result_code,
		result_value,
		create_date,
		memo
		)
		values (
		#{bagCode,jdbcType=VARCHAR},
		#{dataId,jdbcType=BIGINT},
		#{dataType,jdbcType=INTEGER},
		#{userId,jdbcType=BIGINT},
		#{taskType,jdbcType=VARCHAR},
		#{taskValue,jdbcType=VARCHAR},
		#{resultCode,jdbcType=VARCHAR},
		#{resultValue,jdbcType=VARCHAR},
		#{createDate,jdbcType=TIMESTAMP},
		#{memo,jdbcType=VARCHAR}
		)
	</insert>

	<update id="update" parameterType="com.h2y.bmg.entity.ImportGoodsTask">
		update tb_import_goods_task
		set
		bag_code = #{bagCode,jdbcType=VARCHAR},
		data_id = #{dataId,jdbcType=BIGINT},
		data_type = #{dataType,jdbcType=INTEGER},
		user_id = #{userId,jdbcType=BIGINT},
		task_type = #{taskType,jdbcType=VARCHAR},
		task_value = #{taskValue,jdbcType=VARCHAR},
		result_code = #{resultCode,jdbcType=VARCHAR},
		result_value = #{resultValue,jdbcType=VARCHAR},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		memo = #{memo,jdbcType=VARCHAR}
		where id = #{id}
	</update>

	<select id="get" parameterType="long"
		resultMap="importgoodstaskDaoMap">
		select * from tb_import_goods_task where id = #{id}
	</select>

	<select id="getListMap" parameterType="hashmap" resultMap="importgoodstaskDaoListMap">
		SELECT
			*
		FROM
			tb_import_goods_task
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			bag_code = #{bagCode}
			<if test="ifQuery!=null and ifQuery!=''">
				and ${ifQuery}
			</if>
		</trim>
		<choose>
			<when test="sortname !=null and sortname !=''">
				order by ${sortname}
				<if test="sortorder !=null and sortorder !='' ">
					${sortorder} 
				</if>
			</when>
			<otherwise>
				order by create_date desc
			</otherwise>
		</choose>
		limit ${(page-1)*pagesize},${pagesize}
	</select>
	
	<select id="getListRows" parameterType="hashmap" resultType="long">
		SELECT
			count(id)
		FROM
			tb_import_goods_task
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			bag_code = #{bagCode}
			<if test="ifQuery!=null and ifQuery!=''">
				and ${ifQuery}
			</if>
		</trim>
	</select>
	
</mapper>
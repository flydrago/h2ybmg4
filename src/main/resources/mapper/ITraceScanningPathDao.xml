<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.h2y.bmg.dao.ITraceScanningPathDao">

	<resultMap type="com.h2y.bmg.entity.TraceScanningPath" id="tracescanningpathDaoMap">
		<result property="id" column="id" javaType="long" jdbcType="BIGINT" />
		<result property="provideId" column="provide_id" javaType="long" jdbcType="BIGINT" />
		<result property="pactFileName" column="pact_file_name" javaType="string" jdbcType="VARCHAR" />
		<result property="diskFileName" column="disk_file_name" javaType="string" jdbcType="VARCHAR" />
		<result property="rootPath" column="root_path" javaType="string" jdbcType="VARCHAR" />
		<result property="relativePath" column="relative_path" javaType="string" jdbcType="VARCHAR" />
		<result property="fileSuffix" column="file_suffix" javaType="string" jdbcType="VARCHAR" />
		<result property="createDate" column="create_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="updateDate" column="update_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="parentId" column="parent_id" javaType="long" jdbcType="BIGINT" />
		<result property="fileSize" column="file_size" javaType="long" jdbcType="BIGINT" />
		<result property="ord" column="ord" javaType="int" jdbcType="INTEGER" />
		<result property="ifEnable" column="if_enable" javaType="int" jdbcType="INTEGER" />
		<result property="data1" column="data_1" javaType="string" jdbcType="VARCHAR" />
		<result property="data2" column="data_2" javaType="string" jdbcType="VARCHAR" />
		<result property="data3" column="data_3" javaType="string" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="hashMap" id="tracescanningpathDaoListMap">
		<result property="ID" column="id" javaType="long" jdbcType="BIGINT" />
		<result property="PROVIDE_ID" column="provide_id" javaType="long" jdbcType="BIGINT" />
		<result property="PACTFILE_NAME" column="pact_file_name" javaType="string" jdbcType="VARCHAR" />
		<result property="DISK_FILE_NAME" column="disk_file_name" javaType="string" jdbcType="VARCHAR" />
		<result property="ROOT_PATH" column="root_path" javaType="string" jdbcType="VARCHAR" />
		<result property="RELATIVE_PATH" column="relative_path" javaType="string" jdbcType="VARCHAR" />
		<result property="FILE_SUFFIX" column="file_suffix" javaType="string" jdbcType="VARCHAR" />
		<result property="CREATE_DATE" column="create_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="UPDATE_DATE" column="update_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="PARENT_ID" column="parent_id" javaType="long" jdbcType="BIGINT" />
		<result property="FILE_SIZE" column="file_size" javaType="long" jdbcType="BIGINT" />
		<result property="ORD" column="ord" javaType="int" jdbcType="INTEGER" />
		<result property="IF_ENABLE" column="if_enable" javaType="int" jdbcType="INTEGER" />
		<result property="DATA_1" column="data_1" javaType="string" jdbcType="VARCHAR" />
		<result property="DATA_2" column="data_2" javaType="string" jdbcType="VARCHAR" />
		<result property="DATA_3" column="data_3" javaType="string" jdbcType="VARCHAR" />
	</resultMap>
	<insert id="add" parameterType="com.h2y.bmg.entity.TraceScanningPath">
		<selectKey keyProperty="id" resultType="long" order="AFTER"> 
			SELECT max(id)  AS value  from tb_trace_scanning_path 
		</selectKey>  
		insert into tb_trace_scanning_path
		(
		provide_id,
		pact_file_name,
		disk_file_name,
		root_path,
		relative_path,
		file_suffix,
		create_date,
		update_date,
		parent_id,
		file_size,
		if_enable,
		ord,
		data_1,
		data_2,
		data_3
		)
		values (
		#{provideId,jdbcType=BIGINT},
		#{pactFileName,jdbcType=VARCHAR},
		#{diskFileName,jdbcType=VARCHAR},
		#{rootPath,jdbcType=VARCHAR},
		#{relativePath,jdbcType=VARCHAR},
		#{fileSuffix,jdbcType=VARCHAR},
		#{createDate,jdbcType=TIMESTAMP},
		#{updateDate,jdbcType=TIMESTAMP},
		#{parentId,jdbcType=BIGINT},
		#{fileSize,jdbcType=BIGINT},
		#{ifEnable,jdbcType=INTEGER},
		#{ord,jdbcType=INTEGER},
		#{data1,jdbcType=VARCHAR},
		#{data2,jdbcType=VARCHAR},
		#{data3,jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="addBatch" parameterType="com.h2y.bmg.entity.TraceScanningPath">
		<selectKey keyProperty="id" resultType="long" order="AFTER"> 
			SELECT max(id)  AS value  from tb_trace_scanning_path 
		</selectKey>  
		insert into tb_trace_scanning_path
		(
		provide_id,
		pact_file_name,
		disk_file_name,
		root_path,
		relative_path,
		file_suffix,
		create_date,
		update_date,
		parent_id,
		file_size,
		if_enable,
		ord,
		data_1,
		data_2,
		data_3
		)
		values 
		<foreach collection="list" item="item" separator=",">
		(
		#{item.provideId,jdbcType=BIGINT},
		#{item.pactFileName,jdbcType=VARCHAR},
		#{item.diskFileName,jdbcType=VARCHAR},
		#{item.rootPath,jdbcType=VARCHAR},
		#{item.relativePath,jdbcType=VARCHAR},
		#{item.fileSuffix,jdbcType=VARCHAR},
		#{item.createDate,jdbcType=TIMESTAMP},
		#{item.updateDate,jdbcType=TIMESTAMP},
		#{item.parentId,jdbcType=BIGINT},
		#{item.fileSize,jdbcType=BIGINT},
		#{item.ifEnable,jdbcType=INTEGER},
		#{item.ord,jdbcType=INTEGER},
		#{item.data1,jdbcType=VARCHAR},
		#{item.data2,jdbcType=VARCHAR},
		#{item.data3,jdbcType=VARCHAR}
		)
		</foreach>
	</insert>

	<update id="update" parameterType="com.h2y.bmg.entity.TraceScanningPath">
		update tb_trace_scanning_path
		set
		provide_id = #{provideId,jdbcType=BIGINT},
		pact_file_name = #{pactFileName,jdbcType=VARCHAR},
		disk_file_name = #{diskFileName,jdbcType=VARCHAR},
		root_path = #{rootPath,jdbcType=VARCHAR},
		relative_path = #{relativePath,jdbcType=VARCHAR},
		file_suffix = #{fileSuffix,jdbcType=VARCHAR},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		update_date = #{updateDate,jdbcType=TIMESTAMP},
		parent_id = #{parentId,jdbcType=BIGINT},
		file_size = #{fileSize,jdbcType=BIGINT},
		if_enable = #{ifEnable,jdbcType=INTEGER},
		ord = #{ord,jdbcType=INTEGER},
		data_1 = #{data1,jdbcType=VARCHAR},
		data_2 = #{data2,jdbcType=VARCHAR},
		data_3 = #{data3,jdbcType=VARCHAR}
		where id = #{id}
	</update>

	<delete id="delete" parameterType="com.h2y.bmg.entity.TraceScanningPath">
		delete from
		tb_trace_scanning_path
		where
		id = #{id} 
	</delete>

	<delete id="deleteById" parameterType="long">
		delete from
		tb_trace_scanning_path
		where
		id = #{id} 
	</delete>
	<!--
	<delete id="deleteByIds">
		delete from
		tb_trace_scanning_path
		where
		id in
		<foreach collection="list" item="id" open="(" separator=","
			close=")"> #{id} 
		</foreach>
	</delete>
	-->

	<select id="get" parameterType="long"
		resultMap="tracescanningpathDaoMap">
		select * from tb_trace_scanning_path where id = #{id}
	</select>


	<select id="getListData" parameterType="long"
		resultMap="tracescanningpathDaoListMap">
		select * from
		tb_trace_scanning_path
		
		where parent_id = #{parentId}
		
		order by ord asc
	</select>


	<select id="getList" parameterType="com.h2y.bmg.entity.TraceScanningPath"
		resultMap="tracescanningpathDaoMap">
		select * from
		tb_trace_scanning_path

		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			
			<if test="id!= null">
			and id = #{id}
			</if>
			<if test="provideId!= null">
			and provide_id = #{provideId}
			</if>
			<if test="pactFileName!= null and pactFileName!=''">
			and pact_file_name = #{pactFileName}
			</if>
			<if test="diskFileName!= null and diskFileName!=''">
			and disk_file_name = #{diskFileName}
			</if>
			<if test="rootPath!= null and rootPath!=''">
			and root_path = #{rootPath}
			</if>
			<if test="relativePath!= null and relativePath!=''">
			and relative_path = #{relativePath}
			</if>
			<if test="fileSuffix!= null and fileSuffix!=''">
			and file_suffix = #{fileSuffix}
			</if>
			<if test="createDate!= null and createDate!=''">
			and create_date = #{createDate}
			</if>
			<if test="updateDate!= null and updateDate!=''">
			and update_date = #{updateDate}
			</if>
			<if test="parentId!= null">
			and parent_id = #{parentId}
			</if>
			<if test="fileSize!= null">
			and file_size = #{fileSize}
			</if>
			<if test="ifEnable!= null">
			and if_enable = #{ifEnable}
			</if>
			<if test="ord!= null">
			and ord = #{ord}
			</if>
			<if test="data1!= null and data1!=''">
			and data_1 = #{data1}
			</if>
			<if test="data2!= null and data2!=''">
			and data_2 = #{data2}
			</if>
			<if test="data3!= null and data3!=''">
			and data_3 = #{data3}
			</if>
		</trim>

	</select>




	<select id="getListPage" parameterType="hashmap" resultMap="tracescanningpathDaoMap">
		select
		*
		from
		tb_trace_scanning_path
		<if test="keyTraceScanningPath!= null">
			<trim prefix="WHERE" prefixOverrides="AND |OR ">

				<if test="keyTraceScanningPath.id!= null">
				and id = #{keyTraceScanningPath.id}
				</if>
				<if test="keyTraceScanningPath.provideId!= null">
				and provide_id = #{keyTraceScanningPath.provideId}
				</if>
				<if test="keyTraceScanningPath.pactFileName!= null and keyTraceScanningPath.pactFileName!=''">
				and pact_file_name = #{keyTraceScanningPath.pactFileName}
				</if>
				<if test="keyTraceScanningPath.diskFileName!= null and keyTraceScanningPath.diskFileName!=''">
				and disk_file_name = #{keyTraceScanningPath.diskFileName}
				</if>
				<if test="keyTraceScanningPath.rootPath!= null and keyTraceScanningPath.rootPath!=''">
				and root_path = #{keyTraceScanningPath.rootPath}
				</if>
				<if test="keyTraceScanningPath.relativePath!= null and keyTraceScanningPath.relativePath!=''">
				and relative_path = #{keyTraceScanningPath.relativePath}
				</if>
				<if test="keyTraceScanningPath.fileSuffix!= null and keyTraceScanningPath.fileSuffix!=''">
				and file_suffix = #{keyTraceScanningPath.fileSuffix}
				</if>
				<if test="keyTraceScanningPath.createDate!= null and keyTraceScanningPath.createDate!=''">
				and create_date = #{keyTraceScanningPath.createDate}
				</if>
				<if test="keyTraceScanningPath.updateDate!= null and keyTraceScanningPath.updateDate!=''">
				and update_date = #{keyTraceScanningPath.updateDate}
				</if>
				<if test="keyTraceScanningPath.parentId!= null">
				and parent_id = #{keyTraceScanningPath.parentId}
				</if>
				<if test="keyTraceScanningPath.fileSize!= null">
				and file_size = #{keyTraceScanningPath.fileSize}
				</if>
				<if test="keyTraceScanningPath.ifEnable!= null">
				and if_enable = #{keyTraceScanningPath.ifEnable}
				</if>
				<if test="keyTraceScanningPath.ord!= null">
				and ord = #{keyTraceScanningPath.ord}
				</if>
				<if test="keyTraceScanningPath.data1!= null and keyTraceScanningPath.data1!=''">
				and data_1 = #{keyTraceScanningPath.data1}
				</if>
				<if test="keyTraceScanningPath.data2!= null and keyTraceScanningPath.data2!=''">
				and data_2 = #{keyTraceScanningPath.data2}
				</if>
				<if test="keyTraceScanningPath.data3!= null and keyTraceScanningPath.data3!=''">
				and data_3 = #{keyTraceScanningPath.data3}
				</if>
			</trim>
		</if> 
		limit ${(page-1)*pagesize},${pagesize}
	</select>

	<select id="getRows" parameterType="hashmap" resultType="long">
		select
		count(*) from
		tb_trace_scanning_path
		<if test="keyTraceScanningPath!= null">
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="keyTraceScanningPath.id!= null">
				and id = #{keyTraceScanningPath.id}
				</if>
				<if test="keyTraceScanningPath.provideId!= null">
				and provide_id = #{keyTraceScanningPath.provideId}
				</if>
				<if test="keyTraceScanningPath.pactFileName!= null and keyTraceScanningPath.pactFileName!=''">
				and pact_file_name = #{keyTraceScanningPath.pactFileName}
				</if>
				<if test="keyTraceScanningPath.diskFileName!= null and keyTraceScanningPath.diskFileName!=''">
				and disk_file_name = #{keyTraceScanningPath.diskFileName}
				</if>
				<if test="keyTraceScanningPath.rootPath!= null and keyTraceScanningPath.rootPath!=''">
				and root_path = #{keyTraceScanningPath.rootPath}
				</if>
				<if test="keyTraceScanningPath.relativePath!= null and keyTraceScanningPath.relativePath!=''">
				and relative_path = #{keyTraceScanningPath.relativePath}
				</if>
				<if test="keyTraceScanningPath.fileSuffix!= null and keyTraceScanningPath.fileSuffix!=''">
				and file_suffix = #{keyTraceScanningPath.fileSuffix}
				</if>
				<if test="keyTraceScanningPath.createDate!= null and keyTraceScanningPath.createDate!=''">
				and create_date = #{keyTraceScanningPath.createDate}
				</if>
				<if test="keyTraceScanningPath.updateDate!= null and keyTraceScanningPath.updateDate!=''">
				and update_date = #{keyTraceScanningPath.updateDate}
				</if>
				<if test="keyTraceScanningPath.parentId!= null">
				and parent_id = #{keyTraceScanningPath.parentId}
				</if>
				<if test="keyTraceScanningPath.fileSize!= null">
				and file_size = #{keyTraceScanningPath.fileSize}
				</if>
				<if test="keyTraceScanningPath.ifEnable!= null">
				and if_enable = #{keyTraceScanningPath.ifEnable}
				</if>
				<if test="keyTraceScanningPath.ord!= null">
				and ord = #{keyTraceScanningPath.ord}
				</if>
				<if test="keyTraceScanningPath.data1!= null and keyTraceScanningPath.data1!=''">
				and data_1 = #{keyTraceScanningPath.data1}
				</if>
				<if test="keyTraceScanningPath.data2!= null and keyTraceScanningPath.data2!=''">
				and data_2 = #{keyTraceScanningPath.data2}
				</if>
				<if test="keyTraceScanningPath.data3!= null and keyTraceScanningPath.data3!=''">
				and data_3 = #{keyTraceScanningPath.data3}
				</if>
			</trim>
		</if>
	</select>
</mapper>
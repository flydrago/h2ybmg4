<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.h2y.jxc.dao.IJxcPurchaseReturnsDao">

	<resultMap type="com.h2y.jxc.entity.JxcPurchaseReturns" id="jxcpurchasereturnsDaoMap">
		<result property="id" column="id" javaType="long" jdbcType="BIGINT" />
		<result property="billNo" column="bill_no" javaType="string" jdbcType="VARCHAR" />
		<result property="billCustomNo" column="bill_custom_no" javaType="string" jdbcType="VARCHAR" />
		<result property="returnsDate" column="returns_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="proceedsDate" column="proceeds_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="supplierId" column="supplier_id" javaType="long" jdbcType="BIGINT" />
		<result property="supplier" column="supplier" javaType="string" jdbcType="VARCHAR" />
		<result property="storageId" column="storage_id" javaType="long" jdbcType="BIGINT" />
		<result property="storage" column="storage" javaType="string" jdbcType="VARCHAR" />
		<result property="storageArea" column="storage_area" javaType="string" jdbcType="VARCHAR" />
		<result property="brokerId" column="broker_id" javaType="long" jdbcType="BIGINT" />
		<result property="broker" column="broker" javaType="string" jdbcType="VARCHAR" />
		<result property="proceedsAccountId" column="proceeds_account_Id" javaType="long" jdbcType="BIGINT" />
		<result property="proceedsAccount" column="proceeds_account" javaType="string" jdbcType="VARCHAR" />
		<result property="currentProceeds" column="current_proceeds" javaType="double" jdbcType="DOUBLE" />
		<result property="notes" column="notes" javaType="string" jdbcType="VARCHAR" />
		<result property="reviseMark" column="revise_mark" javaType="int" jdbcType="INTEGER" />
		<result property="checkStatus" column="check_status" javaType="int" jdbcType="INTEGER" />
		<result property="billStatus" column="bill_status" javaType="int" jdbcType="INTEGER" />
		<result property="totalAmount" column="total_amount" javaType="double" jdbcType="DOUBLE" />
		<result property="discount" column="discount" javaType="double" jdbcType="DOUBLE" />
		<result property="discountAmount" column="discount_amount" javaType="double" jdbcType="DOUBLE" />
		<result property="receivableAmount" column="receivable_amount" javaType="double" jdbcType="DOUBLE" />
		<result property="billMaker" column="bill_maker" javaType="string" jdbcType="VARCHAR" />
		<result property="createDate" column="create_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="zoneCode" column="zone_code" javaType="string" jdbcType="VARCHAR" />
		<result property="data1" column="data1" javaType="string" jdbcType="VARCHAR" />
		<result property="data2" column="data2" javaType="string" jdbcType="VARCHAR" />
		<result property="data3" column="data3" javaType="string" jdbcType="VARCHAR" />
		<result property="data4" column="data4" javaType="string" jdbcType="VARCHAR" />
		<result property="data5" column="data5" javaType="long" jdbcType="BIGINT" />
		<result property="data6" column="data6" javaType="long" jdbcType="BIGINT" />
		<result property="data7" column="data7" javaType="long" jdbcType="BIGINT" />
		<result property="data8" column="data8" javaType="long" jdbcType="BIGINT" />
	</resultMap>
	
	<resultMap type="java.util.Map" id="jxcPurchaseReturnsListMap">
		<result property="ID" column="id" javaType="long" jdbcType="BIGINT" />
		<result property="BILL_NO" column="bill_no" javaType="string" jdbcType="VARCHAR" />
		<result property="BILL_CUSTOM_NO" column="bill_custom_no" javaType="string" jdbcType="VARCHAR" />
		<result property="RETURNS_DATE" column="returns_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="PROCEEDS_DATE" column="proceeds_date" javaType="date" jdbcType="TIMESTAMP" />
		<result property="SUPPLIER_ID" column="supplier_id" javaType="long" jdbcType="BIGINT" />
		<result property="SUPPLIER" column="supplier" javaType="string" jdbcType="VARCHAR" />
		<result property="STORAGE_ID" column="storage_id" javaType="long" jdbcType="BIGINT" />
		<result property="STORAGE" column="storage" javaType="string" jdbcType="VARCHAR" />
		<result property="STORAGE_AREA" column="storage_area" javaType="string" jdbcType="VARCHAR" />
		<result property="BROKER_ID" column="broker_id" javaType="long" jdbcType="BIGINT" />
		<result property="BROKER" column="broker" javaType="string" jdbcType="VARCHAR" />
		<result property="PROCEEDS_ACCOUNT_ID" column="proceeds_account_Id" javaType="long" jdbcType="BIGINT" />
		<result property="PROCEEDS_ACCOUNT" column="proceeds_account" javaType="string" jdbcType="VARCHAR" />
		<result property="CURRENT_PROCEEDS" column="current_proceeds" javaType="double" jdbcType="DOUBLE" />

		<result property="NOTES" column="notes" javaType="string" jdbcType="VARCHAR" />
		<result property="REVISE_MARK" column="revise_mark" javaType="int" jdbcType="INTEGER" />
		<result property="CHECK_STATUS" column="check_status" javaType="int" jdbcType="INTEGER" />
		<result property="BILL_STATUS" column="bill_status" javaType="int" jdbcType="INTEGER" />
		<result property="TOTAL_AMOUNT" column="total_amount" javaType="double" jdbcType="DOUBLE" />
		<result property="DISCOUNT" column="discount" javaType="double" jdbcType="DOUBLE" />
		<result property="DISCOUNT_AMOUNT" column="discount_amount" javaType="double" jdbcType="DOUBLE" />
		
		<result property="RECEIVABLE_AMOUNT" column="receivable_amount" javaType="double" jdbcType="DOUBLE" />
		<result property="BILL_MAKER" column="bill_maker" javaType="string" jdbcType="VARCHAR" />
		<result property="CREATE_DATE" column="create_date" javaType="date" jdbcType="TIMESTAMP" />
		
		<result property="ZONE_CODE" column="zone_code" javaType="string" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="getListMap" parameterType="hashmap" resultMap="jxcPurchaseReturnsListMap">
		select * from 
		tb_jxc_purchase_returns
		<trim prefix="WHERE" prefixOverrides="AND|OR" >
			1=1
			<if test="ifQuery!=null and ifQuery!=''">
				and ${ifQuery}
			</if>
			<choose>
				<when test="sortname !=null and sortname !=''">
					order by ${sortname}
					<if test="sortorder !=null and sortorder !='' ">
						${sortorder} 
					</if>
				</when>
				<otherwise>
					order by create_date desc
				</otherwise>
			</choose>
		</trim>
		limit ${(page-1)*pagesize},${pagesize}
	</select>
	
	<select id="getListRows" parameterType="hashmap" resultType="long">
		select count(*) from 
		tb_jxc_purchase_returns
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			1=1
			<if test="ifQuery!=null and ifQuery!=''">
				and ${ifQuery}
			</if>
		</trim>
	</select>
	
	<insert id="add" parameterType="com.h2y.jxc.entity.JxcPurchaseReturns">
		<selectKey keyProperty="id" resultType="long" order="AFTER"> 
			SELECT max(id)  AS value  from tb_jxc_purchase_returns 
		</selectKey>  
		insert into tb_jxc_purchase_returns
		(
		bill_no,
		bill_custom_no,
		returns_date,
		proceeds_date,
		supplier_id,
		supplier,
		storage_id,
		storage,
		storage_area,
		broker_id,
		broker,
		proceeds_account_id,
		proceeds_account,
		current_proceeds,
		notes,
		revise_mark,
		check_status,
		bill_status,
		total_amount,
		discount,
		discount_amount,
		receivable_amount,
		bill_maker,
		create_date,
		zone_code,
		data1,
		data2,
		data3,
		data4,
		data5,
		data6,
		data7,
		data8
		)
		values (
		#{billNo,jdbcType=VARCHAR},
		#{billCustomNo,jdbcType=VARCHAR},
		#{returnsDate,jdbcType=TIMESTAMP},
		#{proceedsDate,jdbcType=TIMESTAMP},
		#{supplierId,jdbcType=BIGINT},
		#{supplier,jdbcType=VARCHAR},
		#{storageId,jdbcType=BIGINT},
		#{storage,jdbcType=VARCHAR},
		#{storageArea,jdbcType=VARCHAR},
		#{brokerId,jdbcType=BIGINT},
		#{broker,jdbcType=VARCHAR},
		#{proceedsAccountId,jdbcType=BIGINT},
		#{proceedsAccount,jdbcType=VARCHAR},
		#{currentProceeds,jdbcType=DOUBLE},
		#{notes,jdbcType=VARCHAR},
		#{reviseMark,jdbcType=INTEGER},
		#{checkStatus,jdbcType=INTEGER},
		#{billStatus,jdbcType=INTEGER},
		#{totalAmount,jdbcType=DOUBLE},
		#{discount,jdbcType=DOUBLE},
		#{discountAmount,jdbcType=DOUBLE},
		#{receivableAmount,jdbcType=DOUBLE},
		#{billMaker,jdbcType=VARCHAR},
		#{createDate,jdbcType=TIMESTAMP},
		#{zoneCode,jdbcType=VARCHAR},
		#{data1,jdbcType=VARCHAR},
		#{data2,jdbcType=VARCHAR},
		#{data3,jdbcType=VARCHAR},
		#{data4,jdbcType=VARCHAR},
		#{data5,jdbcType=BIGINT},
		#{data6,jdbcType=BIGINT},
		#{data7,jdbcType=BIGINT},
		#{data8,jdbcType=BIGINT}
		)
	</insert>

	<update id="update" parameterType="com.h2y.jxc.entity.JxcPurchaseReturns">
		update tb_jxc_purchase_returns
		set
		bill_no = #{billNo,jdbcType=VARCHAR},
		bill_custom_no = #{billCustomNo,jdbcType=VARCHAR},
		returns_date = #{returnsDate,jdbcType=TIMESTAMP},
		proceeds_date = #{proceedsDate,jdbcType=TIMESTAMP},
		supplier_id = #{supplierId,jdbcType=BIGINT},
		supplier = #{supplier,jdbcType=VARCHAR},
		storage_id = #{storageId,jdbcType=BIGINT},
		storage = #{storage,jdbcType=VARCHAR},
		storage_area = #{storageArea,jdbcType=VARCHAR},
		broker_id = #{brokerId,jdbcType=BIGINT},
		broker = #{broker,jdbcType=VARCHAR},
		proceeds_account_id = #{proceedsAccountId,jdbcType=BIGINT},
		proceeds_account = #{proceedsAccount,jdbcType=VARCHAR},
		current_proceeds = #{currentProceeds,jdbcType=DOUBLE},
		notes = #{notes,jdbcType=VARCHAR},
		revise_mark = #{reviseMark,jdbcType=INTEGER},
		check_status = #{checkStatus,jdbcType=INTEGER},
		bill_status = #{billStatus,jdbcType=INTEGER},
		total_amount = #{totalAmount,jdbcType=DOUBLE},
		discount = #{discount,jdbcType=DOUBLE},
		discount_amount = #{discountAmount,jdbcType=DOUBLE},
		receivable_amount = #{receivableAmount,jdbcType=DOUBLE},
		bill_maker = #{billMaker,jdbcType=VARCHAR},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		zone_code = #{zoneCode,jdbcType=VARCHAR},
		data1 = #{data1,jdbcType=VARCHAR},
		data2 = #{data2,jdbcType=VARCHAR},
		data3 = #{data3,jdbcType=VARCHAR},
		data4 = #{data4,jdbcType=VARCHAR},
		data5 = #{data5,jdbcType=BIGINT},
		data6 = #{data6,jdbcType=BIGINT},
		data7 = #{data7,jdbcType=BIGINT},
		data8 = #{data8,jdbcType=BIGINT}
		where id = #{id}
	</update>

	<delete id="delete" parameterType="com.h2y.jxc.entity.JxcPurchaseReturns">
		delete from
		tb_jxc_purchase_returns
		where
		id = #{id} 
	</delete>

	<delete id="deleteById" parameterType="long">
		delete from
		tb_jxc_purchase_returns
		where
		id = #{id} 
	</delete>
	<!--
	<delete id="deleteByIds">
		delete from
		tb_jxc_purchase_returns
		where
		id in
		<foreach collection="list" item="id" open="(" separator=","
			close=")"> #{id} 
		</foreach>
	</delete>
	-->

	<select id="get" parameterType="long"
		resultMap="jxcpurchasereturnsDaoMap">
		select * from tb_jxc_purchase_returns where id = #{id}
	</select>

	<select id="getList" parameterType="com.h2y.jxc.entity.JxcPurchaseReturns"
		resultMap="jxcpurchasereturnsDaoMap">
		select * from
		tb_jxc_purchase_returns

		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			
			<if test="id!= null">
			and id = #{id}
			</if>
			<if test="billNo!= null and billNo!=''">
			and bill_no = #{billNo}
			</if>
			<if test="billCustomNo!= null and billCustomNo!=''">
			and bill_custom_no = #{billCustomNo}
			</if>
			<if test="returnsDate!= null and returnsDate!=''">
			and returns_date = #{returnsDate}
			</if>
			<if test="proceedsDate!= null and proceedsDate!=''">
			and proceeds_date = #{proceedsDate}
			</if>
			<if test="supplierId!= null">
			and supplier_id = #{supplierId}
			</if>
			<if test="supplier!= null and supplier!=''">
			and supplier = #{supplier}
			</if>
			<if test="storageId!= null">
			and storage_id = #{storageId}
			</if>
			<if test="storage!= null and storage!=''">
			and storage = #{storage}
			</if>
			<if test="storageArea!= null and storageArea!=''">
			and storage_area = #{storageArea}
			</if>
			<if test="brokerId!= null">
			and broker_id = #{brokerId}
			</if>
			<if test="broker!= null and broker!=''">
			and broker = #{broker}
			</if>
			<if test="proceedsAccountId!= null and proceedsAccountId!=''">
			and proceeds_account_id = #{proceedsAccountId}
			</if>
			<if test="proceedsAccount!= null and proceedsAccount!=''">
			and proceeds_account = #{proceedsAccount}
			</if>
			<if test="currentProceeds!= null and currentProceeds!=''">
			and current_proceeds = #{currentProceeds}
			</if>
			<if test="notes!= null and notes!=''">
			and notes = #{notes}
			</if>
			<if test="reviseMark!= null">
			and revise_mark = #{reviseMark}
			</if>
			<if test="checkStatus!= null">
			and check_status = #{checkStatus}
			</if>
			<if test="billStatus!= null">
			and bill_status = #{billStatus}
			</if>
			<if test="totalAmount!= null and totalAmount!=''">
			and total_amount = #{totalAmount}
			</if>
			<if test="discount!= null and discount!=''">
			and discount = #{discount}
			</if>
			<if test="discountAmount!= null and discountAmount!=''">
			and discount_amount = #{discountAmount}
			</if>
			<if test="receivableAmount!= null and receivableAmount!=''">
			and receivable_amount = #{receivableAmount}
			</if>
			<if test="billMaker!= null and billMaker!=''">
			and bill_maker = #{billMaker}
			</if>
			<if test="createDate!= null and createDate!=''">
			and create_date = #{createDate}
			</if>
			<if test="zoneCode!= null and zoneCode!=''">
			and zone_code = #{zoneCode}
			</if>
			<if test="data1!= null and data1!=''">
			and data1 = #{data1}
			</if>
			<if test="data2!= null and data2!=''">
			and data2 = #{data2}
			</if>
			<if test="data3!= null and data3!=''">
			and data3 = #{data3}
			</if>
			<if test="data4!= null and data4!=''">
			and data4 = #{data4}
			</if>
			<if test="data5!= null">
			and data5 = #{data5}
			</if>
			<if test="data6!= null">
			and data6 = #{data6}
			</if>
			<if test="data7!= null">
			and data7 = #{data7}
			</if>
			<if test="data8!= null">
			and data8 = #{data8}
			</if>
		</trim>

	</select>




	<select id="getListPage" parameterType="hashmap" resultMap="jxcpurchasereturnsDaoMap">
		select
		*
		from
		tb_jxc_purchase_returns
		<if test="keyJxcPurchaseReturns!= null">
			<trim prefix="WHERE" prefixOverrides="AND |OR ">

				<if test="keyJxcPurchaseReturns.id!= null">
				and id = #{keyJxcPurchaseReturns.id}
				</if>
				<if test="keyJxcPurchaseReturns.billNo!= null and keyJxcPurchaseReturns.billNo!=''">
				and bill_no = #{keyJxcPurchaseReturns.billNo}
				</if>
				<if test="keyJxcPurchaseReturns.billCustomNo!= null and keyJxcPurchaseReturns.billCustomNo!=''">
				and bill_custom_no = #{keyJxcPurchaseReturns.billCustomNo}
				</if>
				<if test="keyJxcPurchaseReturns.returnsDate!= null and keyJxcPurchaseReturns.returnsDate!=''">
				and returns_date = #{keyJxcPurchaseReturns.returnsDate}
				</if>
				<if test="keyJxcPurchaseReturns.proceedsDate!= null and keyJxcPurchaseReturns.proceedsDate!=''">
				and proceeds_date = #{keyJxcPurchaseReturns.proceedsDate}
				</if>
				<if test="keyJxcPurchaseReturns.supplierId!= null">
				and supplier_id = #{keyJxcPurchaseReturns.supplierId}
				</if>
				<if test="keyJxcPurchaseReturns.supplier!= null and keyJxcPurchaseReturns.supplier!=''">
				and supplier = #{keyJxcPurchaseReturns.supplier}
				</if>
				<if test="keyJxcPurchaseReturns.storageId!= null">
				and storage_id = #{keyJxcPurchaseReturns.storageId}
				</if>
				<if test="keyJxcPurchaseReturns.storage!= null and keyJxcPurchaseReturns.storage!=''">
				and storage = #{keyJxcPurchaseReturns.storage}
				</if>
				<if test="keyJxcPurchaseReturns.storageArea!= null and keyJxcPurchaseReturns.storageArea!=''">
				and storage_area = #{keyJxcPurchaseReturns.storageArea}
				</if>
				<if test="keyJxcPurchaseReturns.brokerId!= null">
				and broker_id = #{keyJxcPurchaseReturns.brokerId}
				</if>
				<if test="keyJxcPurchaseReturns.broker!= null and keyJxcPurchaseReturns.broker!=''">
				and broker = #{keyJxcPurchaseReturns.broker}
				</if>
				<if test="keyJxcPurchaseReturns.proceedsAccountId!= null and keyJxcPurchaseReturns.proceedsAccountId!=''">
				and proceeds_account_id = #{keyJxcPurchaseReturns.proceedsAccountId}
				</if>
				<if test="keyJxcPurchaseReturns.proceedsAccount!= null and keyJxcPurchaseReturns.proceedsAccount!=''">
				and proceeds_account = #{keyJxcPurchaseReturns.proceedsAccount}
				</if>
				<if test="keyJxcPurchaseReturns.currentProceeds!= null and keyJxcPurchaseReturns.currentProceeds!=''">
				and current_proceeds = #{keyJxcPurchaseReturns.currentProceeds}
				</if>
				<if test="keyJxcPurchaseReturns.notes!= null and keyJxcPurchaseReturns.notes!=''">
				and notes = #{keyJxcPurchaseReturns.notes}
				</if>
				<if test="keyJxcPurchaseReturns.reviseMark!= null">
				and revise_mark = #{keyJxcPurchaseReturns.reviseMark}
				</if>
				<if test="keyJxcPurchaseReturns.checkStatus!= null">
				and check_status = #{keyJxcPurchaseReturns.checkStatus}
				</if>
				<if test="keyJxcPurchaseReturns.billStatus!= null">
				and bill_status = #{keyJxcPurchaseReturns.billStatus}
				</if>
				<if test="keyJxcPurchaseReturns.totalAmount!= null and keyJxcPurchaseReturns.totalAmount!=''">
				and total_amount = #{keyJxcPurchaseReturns.totalAmount}
				</if>
				<if test="keyJxcPurchaseReturns.discount!= null and keyJxcPurchaseReturns.discount!=''">
				and discount = #{keyJxcPurchaseReturns.discount}
				</if>
				<if test="keyJxcPurchaseReturns.discountAmount!= null and keyJxcPurchaseReturns.discountAmount!=''">
				and discount_amount = #{keyJxcPurchaseReturns.discountAmount}
				</if>
				<if test="keyJxcPurchaseReturns.receivableAmount!= null and keyJxcPurchaseReturns.receivableAmount!=''">
				and receivable_amount = #{keyJxcPurchaseReturns.receivableAmount}
				</if>
				<if test="keyJxcPurchaseReturns.billMaker!= null and keyJxcPurchaseReturns.billMaker!=''">
				and bill_maker = #{keyJxcPurchaseReturns.billMaker}
				</if>
				<if test="keyJxcPurchaseReturns.createDate!= null and keyJxcPurchaseReturns.createDate!=''">
				and create_date = #{keyJxcPurchaseReturns.createDate}
				</if>
				<if test="keyJxcPurchaseReturns.zoneCode!= null and keyJxcPurchaseReturns.zoneCode!=''">
				and zone_code = #{keyJxcPurchaseReturns.zoneCode}
				</if>
				<if test="keyJxcPurchaseReturns.data1!= null and keyJxcPurchaseReturns.data1!=''">
				and data1 = #{keyJxcPurchaseReturns.data1}
				</if>
				<if test="keyJxcPurchaseReturns.data2!= null and keyJxcPurchaseReturns.data2!=''">
				and data2 = #{keyJxcPurchaseReturns.data2}
				</if>
				<if test="keyJxcPurchaseReturns.data3!= null and keyJxcPurchaseReturns.data3!=''">
				and data3 = #{keyJxcPurchaseReturns.data3}
				</if>
				<if test="keyJxcPurchaseReturns.data4!= null and keyJxcPurchaseReturns.data4!=''">
				and data4 = #{keyJxcPurchaseReturns.data4}
				</if>
				<if test="keyJxcPurchaseReturns.data5!= null">
				and data5 = #{keyJxcPurchaseReturns.data5}
				</if>
				<if test="keyJxcPurchaseReturns.data6!= null">
				and data6 = #{keyJxcPurchaseReturns.data6}
				</if>
				<if test="keyJxcPurchaseReturns.data7!= null">
				and data7 = #{keyJxcPurchaseReturns.data7}
				</if>
				<if test="keyJxcPurchaseReturns.data8!= null">
				and data8 = #{keyJxcPurchaseReturns.data8}
				</if>
			</trim>
		</if> 
		limit ${(page-1)*pagesize},${pagesize}
	</select>

	<select id="getRows" parameterType="hashmap" resultType="long">
		select
		count(*) from
		tb_jxc_purchase_returns
		<if test="keyJxcPurchaseReturns!= null">
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="keyJxcPurchaseReturns.id!= null">
				and id = #{keyJxcPurchaseReturns.id}
				</if>
				<if test="keyJxcPurchaseReturns.billNo!= null and keyJxcPurchaseReturns.billNo!=''">
				and bill_no = #{keyJxcPurchaseReturns.billNo}
				</if>
				<if test="keyJxcPurchaseReturns.billCustomNo!= null and keyJxcPurchaseReturns.billCustomNo!=''">
				and bill_custom_no = #{keyJxcPurchaseReturns.billCustomNo}
				</if>
				<if test="keyJxcPurchaseReturns.returnsDate!= null and keyJxcPurchaseReturns.returnsDate!=''">
				and returns_date = #{keyJxcPurchaseReturns.returnsDate}
				</if>
				<if test="keyJxcPurchaseReturns.proceedsDate!= null and keyJxcPurchaseReturns.proceedsDate!=''">
				and proceeds_date = #{keyJxcPurchaseReturns.proceedsDate}
				</if>
				<if test="keyJxcPurchaseReturns.supplierId!= null">
				and supplier_id = #{keyJxcPurchaseReturns.supplierId}
				</if>
				<if test="keyJxcPurchaseReturns.supplier!= null and keyJxcPurchaseReturns.supplier!=''">
				and supplier = #{keyJxcPurchaseReturns.supplier}
				</if>
				<if test="keyJxcPurchaseReturns.storageId!= null">
				and storage_id = #{keyJxcPurchaseReturns.storageId}
				</if>
				<if test="keyJxcPurchaseReturns.storage!= null and keyJxcPurchaseReturns.storage!=''">
				and storage = #{keyJxcPurchaseReturns.storage}
				</if>
				<if test="keyJxcPurchaseReturns.storageArea!= null and keyJxcPurchaseReturns.storageArea!=''">
				and storage_area = #{keyJxcPurchaseReturns.storageArea}
				</if>
				<if test="keyJxcPurchaseReturns.brokerId!= null">
				and broker_id = #{keyJxcPurchaseReturns.brokerId}
				</if>
				<if test="keyJxcPurchaseReturns.broker!= null and keyJxcPurchaseReturns.broker!=''">
				and broker = #{keyJxcPurchaseReturns.broker}
				</if>
				<if test="keyJxcPurchaseReturns.proceedsAccountId!= null and keyJxcPurchaseReturns.proceedsAccountId!=''">
				and proceeds_account_id = #{keyJxcPurchaseReturns.proceedsAccountId}
				</if>
				<if test="keyJxcPurchaseReturns.proceedsAccount!= null and keyJxcPurchaseReturns.proceedsAccount!=''">
				and proceeds_account = #{keyJxcPurchaseReturns.proceedsAccount}
				</if>
				<if test="keyJxcPurchaseReturns.currentProceeds!= null and keyJxcPurchaseReturns.currentProceeds!=''">
				and current_proceeds = #{keyJxcPurchaseReturns.currentProceeds}
				</if>
				<if test="keyJxcPurchaseReturns.notes!= null and keyJxcPurchaseReturns.notes!=''">
				and notes = #{keyJxcPurchaseReturns.notes}
				</if>
				<if test="keyJxcPurchaseReturns.reviseMark!= null">
				and revise_mark = #{keyJxcPurchaseReturns.reviseMark}
				</if>
				<if test="keyJxcPurchaseReturns.checkStatus!= null">
				and check_status = #{keyJxcPurchaseReturns.checkStatus}
				</if>
				<if test="keyJxcPurchaseReturns.billStatus!= null">
				and bill_status = #{keyJxcPurchaseReturns.billStatus}
				</if>
				<if test="keyJxcPurchaseReturns.totalAmount!= null and keyJxcPurchaseReturns.totalAmount!=''">
				and total_amount = #{keyJxcPurchaseReturns.totalAmount}
				</if>
				<if test="keyJxcPurchaseReturns.discount!= null and keyJxcPurchaseReturns.discount!=''">
				and discount = #{keyJxcPurchaseReturns.discount}
				</if>
				<if test="keyJxcPurchaseReturns.discountAmount!= null and keyJxcPurchaseReturns.discountAmount!=''">
				and discount_amount = #{keyJxcPurchaseReturns.discountAmount}
				</if>
				<if test="keyJxcPurchaseReturns.receivableAmount!= null and keyJxcPurchaseReturns.receivableAmount!=''">
				and receivable_amount = #{keyJxcPurchaseReturns.receivableAmount}
				</if>
				<if test="keyJxcPurchaseReturns.billMaker!= null and keyJxcPurchaseReturns.billMaker!=''">
				and bill_maker = #{keyJxcPurchaseReturns.billMaker}
				</if>
				<if test="keyJxcPurchaseReturns.createDate!= null and keyJxcPurchaseReturns.createDate!=''">
				and create_date = #{keyJxcPurchaseReturns.createDate}
				</if>
				<if test="keyJxcPurchaseReturns.zoneCode!= null and keyJxcPurchaseReturns.zoneCode!=''">
				and zone_code = #{keyJxcPurchaseReturns.zoneCode}
				</if>
				<if test="keyJxcPurchaseReturns.data1!= null and keyJxcPurchaseReturns.data1!=''">
				and data1 = #{keyJxcPurchaseReturns.data1}
				</if>
				<if test="keyJxcPurchaseReturns.data2!= null and keyJxcPurchaseReturns.data2!=''">
				and data2 = #{keyJxcPurchaseReturns.data2}
				</if>
				<if test="keyJxcPurchaseReturns.data3!= null and keyJxcPurchaseReturns.data3!=''">
				and data3 = #{keyJxcPurchaseReturns.data3}
				</if>
				<if test="keyJxcPurchaseReturns.data4!= null and keyJxcPurchaseReturns.data4!=''">
				and data4 = #{keyJxcPurchaseReturns.data4}
				</if>
				<if test="keyJxcPurchaseReturns.data5!= null">
				and data5 = #{keyJxcPurchaseReturns.data5}
				</if>
				<if test="keyJxcPurchaseReturns.data6!= null">
				and data6 = #{keyJxcPurchaseReturns.data6}
				</if>
				<if test="keyJxcPurchaseReturns.data7!= null">
				and data7 = #{keyJxcPurchaseReturns.data7}
				</if>
				<if test="keyJxcPurchaseReturns.data8!= null">
				and data8 = #{keyJxcPurchaseReturns.data8}
				</if>
			</trim>
		</if>
	</select>
</mapper>